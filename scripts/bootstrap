#!/bin/sh
#
# bootstrap installs things.

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd -P)
# shellcheck source=tools
. "$DOTFILES_ROOT/scripts/tools"

set -e

echo ''

setup_gitconfig() {
    info 'Setup gitconfig'
    # if there is no user.email, we'll assume it's a new machine/setup and ask it
    if [ -z "$(git config --global --get user.email)" ]; then
        user ' - What is your github author name?'
        read -r user_name
        user ' - What is your github author email?'
        read -r user_email

        git config --global user.name "$user_name"
        git config --global user.email "$user_email"
    elif [ "$(git config --global --get dotfiles.managed)" != "true" ]; then
        # if user.email exists, let's check for dotfiles.managed config. If it is
        # not true, we'll backup the gitconfig file and set previous user.email and
        # user.name in the new one
        user_name="$(git config --global --get user.name)"
        user_email="$(git config --global --get user.email)"
        mv ~/.gitconfig ~/.gitconfig.backup
        success "moved ~/.gitconfig to ~/.gitconfig.backup"
        git config --global user.name "$user_name"
        git config --global user.email "$user_email"
    else
        # otherwise this gitconfig was already made by the dotfiles
        info "Already managed by dotfiles"
    fi
    # include the gitconfig.local file
    git config --global include.path ~/.gitconfig.local
    # finally make git knows this is a managed config already, preventing later
    # overrides by this script
    git config --global dotfiles.managed true
    success 'gitconfig'
}

find_zsh() {
    if command -v zsh >/dev/null 2>&1 && grep "$(command -v zsh)" /etc/shells >/dev/null; then
        command -v zsh
    else
        echo "/bin/zsh"
    fi
}

autoupdate_setup() {
    info 'Setting up the autoupdate script in crontab'
    (
        crontab -l | grep -v "dotfiles-update"
        echo "0 */2 * * * $HOME/.dotfiles/bin/dotfiles-update > $HOME/.dotfiles/dotfiles-update.log 2>&1"
    ) | crontab -
}

setup_gitconfig

info "Installing dependencies and packages"
if ./scripts/upgrade; then
    success "All dependencies installed"
else
    fail "Error installing dependencies"
fi

zsh="$(find_zsh)"
test -z "$TRAVIS_JOB_ID" &&
    test "$(expr "$SHELL" : '.*/\(.*\)')" != "zsh" &&
    command -v chsh >/dev/null 2>&1 &&
    chsh -s "$zsh" &&
    success "set $("$zsh" --version) at $zsh as default shell"

# FIXME: need to find a way to autoupdate and autorefresh (commit and push?)
# autoupdate_setup

echo ''
echo '  All installed!'
